<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BootFromHDD" xml:space="preserve">
    <value>從第一個硬碟啟動</value>
  </data>
  <data name="ChangesNeedRestart" xml:space="preserve">
    <value>變更會在重新啟動應用程序後生效.</value>
  </data>
  <data name="Copying" xml:space="preserve">
    <value>正在複製 {0}</value>
  </data>
  <data name="CopyISOfiles" xml:space="preserve">
    <value>正在複製 ISO 文件 ...</value>
  </data>
  <data name="CreatingISO" xml:space="preserve">
    <value>正在建立 ISO 文件 ...</value>
  </data>
  <data name="ExtractBaseDisk" xml:space="preserve">
    <value>正在壓縮基礎磁碟 ...</value>
  </data>
  <data name="Extracting" xml:space="preserve">
    <value>正在壓縮 {0} ...</value>
  </data>
  <data name="GenMainMenu" xml:space="preserve">
    <value>正在產生主選單 ...</value>
  </data>
  <data name="GenMenu" xml:space="preserve">
    <value>正在產生選單 {0}</value>
  </data>
  <data name="GenMenus" xml:space="preserve">
    <value>正在產生選單 ...</value>
  </data>
  <data name="Init" xml:space="preserve">
    <value>初始化 ...</value>
  </data>
  <data name="CalcIn" xml:space="preserve">
    <value>推算耗時 {0}</value>
  </data>
  <data name="ChkOf" xml:space="preserve">
    <value>{1} 的 {0} 驗證碼:</value>
  </data>
  <data name="CouldntDetect" xml:space="preserve">
    <value>無法偵測出有那種作業系統在這個光碟映像內.</value>
  </data>
  <data name="IsoCreated" xml:space="preserve">
    <value>ISO 文件已成功建立.\n你想在 QEMU 上測試一下嗎?</value>
  </data>
  <data name="IsoCreatedTitle" xml:space="preserve">
    <value>ISO 已建立</value>
  </data>
  <data name="ISOImg" xml:space="preserve">
    <value>ISO 映像</value>
  </data>
  <data name="PicFilter" xml:space="preserve">
    <value>圖片</value>
  </data>
  <data name="BootloaderInstalled" xml:space="preserve">
    <value>{0} 已成功地安裝至 {1}.</value>
  </data>
  <data name="DownComplete" xml:space="preserve">
    <value>下載完成.</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>下載</value>
  </data>
  <data name="MainMenu" xml:space="preserve">
    <value>主選單</value>
  </data>
  <data name="CreatingUSB" xml:space="preserve">
    <value>正在建立多重啟動 USB 隨身碟 ...</value>
  </data>
  <data name="FormatError" xml:space="preserve">
    <value>格式化時發生未確定的錯誤.</value>
  </data>
  <data name="Formatting" xml:space="preserve">
    <value>格式化</value>
  </data>
  <data name="FormatWillErase" xml:space="preserve">
    <value>開始執行格式化嗎?\n注意:原先在目標內的所有資料將會被破壞!</value>
  </data>
  <data name="NeedAdmin" xml:space="preserve">
    <value>你必須擁有管理員權限才能格式化 USB 隨身碟.</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>其他</value>
  </data>
  <data name="PartitionTooBig" xml:space="preserve">
    <value>選取的磁碟分區大小超出 {0} 的限制</value>
  </data>
  <data name="InstallingBoot" xml:space="preserve">
    <value>正在安裝 {0} 至 {1} ...</value>
  </data>
  <data name="SharpBootUsesSoft" xml:space="preserve">
    <value>SharpBoot 使用下列軟體:</value>
  </data>
  <data name="ChooseBootloader" xml:space="preserve">
    <value>選取你欲安裝的啟動引導器:</value>
  </data>
  <data name="Install" xml:space="preserve">
    <value>安裝</value>
  </data>
  <data name="InstallABootLoader" xml:space="preserve">
    <value>安裝啟動引導器至 USB 隨身碟</value>
  </data>
  <data name="Recommended" xml:space="preserve">
    <value>(建議)</value>
  </data>
  <data name="CreateMultibootUsb" xml:space="preserve">
    <value>建立多重啟動 USB 隨身碟</value>
  </data>
  <data name="Filesystem" xml:space="preserve">
    <value>檔案系統</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>確定</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>關閉</value>
  </data>
  <data name="OpCancelled" xml:space="preserve">
    <value>操作已取消</value>
  </data>
  <data name="FileAlreadyExists" xml:space="preserve">
    <value>檔案已存在</value>
  </data>
  <data name="AddFiles" xml:space="preserve">
    <value>新增檔案</value>
  </data>
  <data name="AddCustomEntry" xml:space="preserve">
    <value>新增自訂項目</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="VolumeLabel" xml:space="preserve">
    <value>磁碟區標籤</value>
  </data>
  <data name="Browse" xml:space="preserve">
    <value>瀏覽</value>
  </data>
  <data name="AboutSharpBoot" xml:space="preserve">
    <value>關於 SharpBoot</value>
  </data>
</root>